<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="with.studygroup.dao">
	<resultMap type="studygroup" id="studyGroup">
		<result column="group_no" property="groupNo"/>
		<result column="group_name" property="groupName"/>
		<result column="group_detail" property="groupDetail"/>
		<result column="group_maxperson" property="groupMaxPerson"/>
		<result column="group_nowperson" property="groupNowPerson"/>
		<result column="GROUP_ACTIVELONGITUDE" property="groupActiveLongitude"/>
		<result column="GROUP_ACTIVELATITUDE" property="groupActiveLatitude"/>
		<result column="GROUP_ACTIVEPLACE" property="groupActivePlace"/>
		<result column="group_email" property="groupEmail"/>
		<result column="GROUP_TEL" property="groupTel"/>
		<result column="GROUP_CONFIRMTYPE" property="groupConfirmType"/>
		<result column="GROUP_REPIMAGEPATH" property="groupRepImagePath"/>
		<result column="GROUP_RECRUITSTARTDATE" property="groupRecruitStartDate"/>
		<result column="GROUP_RECRUITENDDATE" property="groupRecruitEndDate"/>
		<result column="GROUP_REGDATE" property="groupRegDate"/>
		<result column="MEMBER_NO" property="groupRecruitEndDate"/>
	</resultMap>
	
	<!-- 스터디그룹 리스트 출력을 위한 쿼리문 -->
	<select id="studyList" parameterType="studygrouppaging" resultMap="studyGroup">
		select 
			group_no, group_name, group_detail, group_maxperson, 
			group_nowperson, GROUP_ACTIVELONGITUDE, GROUP_ACTIVELATITUDE,
			GROUP_ACTIVEPLACE, group_email, GROUP_TEL, GROUP_CONFIRMTYPE, 
			GROUP_REPIMAGEPATH, GROUP_RECRUITSTARTDATE, GROUP_RECRUITENDDATE, MEMBER_NO
		from t_with_studygroup
		where group_name like CONCAT('%', #{search}, '%') 
		  or group_detail like CONCAT('%', #{search}, '%') 
		  or group_activeplace like CONCAT('%', #{search}, '%') 
		limit #{startPage}, #{endPage}
	</select>
	
	<!-- 	스터디그룹 개설을 위한 쿼리문 -->
	<insert id="insertStudyGroup" parameterType="studygroup">
		insert into t_with_studygroup(
			group_name, group_detail, group_maxperson, 
			group_nowperson, GROUP_ACTIVELONGITUDE, GROUP_ACTIVELATITUDE,
			GROUP_ACTIVEPLACE, group_email, GROUP_TEL, GROUP_CONFIRMTYPE, 
			GROUP_REPIMAGEPATH, GROUP_RECRUITSTARTDATE, GROUP_RECRUITENDDATE, MEMBER_NO
		)
		values(
			#{groupName}, #{groupDetail}, #{groupMaxPerson},
			'0', #{groupActiveLongitude}, #{groupActiveLatitude},
			#{groupActivePlace}, #{groupEmail}, #{groupTel}, #{groupConfirmType},
			#{groupRepImagePath}, #{groupRecruitStartDate}, #{groupRecruitEndDate}, '1'
		)
	</insert>
	
	<!-- 	가장 최근 증가값 가져오기 위한 쿼리문-->
	<select id="selectAutoIncrement" resultType="int">
		select max(group_no) from t_with_studygroup;
	</select>
	
	
	<!-- 	스터디그룹 이름 가져오기 위한 쿼리문 -->
	<select id="studyName" parameterType="int" resultType="String">
		select 
			group_name 
		from 
			t_with_studygroup
		where group_no = #{no};
	</select>
	
	<!-- 	스터디그룹 태그를 입력하기 위한 쿼리문 -->
	<insert id="insertStudyGroupTag" parameterType="studygrouptag">
		insert into T_WITH_STUDYGROUP_TAG(
			TAG_NAME, 
			GROUP_NO,
			GROUP_NAME)
		values(
			#{tagName},
			#{groupNo},
			#{groupName}
		)
	</insert>
	
	<!-- 스터디그룹 상세 정보 출력을 위한 쿼리문 -->
	<select id="selectGruopDetail" parameterType="int" resultMap="studyGroup">
		select 
			group_no, group_name, group_detail, group_maxperson, 
			group_nowperson, GROUP_ACTIVELONGITUDE, GROUP_ACTIVELATITUDE,
			GROUP_ACTIVEPLACE, group_email, GROUP_TEL, GROUP_CONFIRMTYPE, 
			GROUP_REPIMAGEPATH, GROUP_RECRUITSTARTDATE, GROUP_RECRUITENDDATE, MEMBER_NO
		from t_with_studygroup
		where group_no = #{no}
	</select>
	
	<!-- 	스터디그룹 상세 댓글 작성을 위한 쿼리문  -->
	<insert id="insertGroupComment" parameterType="studygroupcomment">
		insert into T_WITH_STUDYGROUP_COMMENT(
			member_no,
			group_no,
			comment_content
		)
		values(
			#{memberNo},
			#{groupNo},
			#{commentContent}
		)
	</insert>
	
	<select id="selectCommentList" parameterType="int" resultType="studygroupcomment">
		select 
			MEMBER_NO as memberNo, 
			GROUP_NO as groupNo, 
			COMMENT_NO as commentNo, 
			COMMENT_CONTENT as commentContent, 
			REG_DATE as regDate
		from 
			T_WITH_STUDYGROUP_COMMENT
		where 
			group_no = #{groupNo}
	</select>
	
	<!-- 스터디그룹 즐겨찾기 중복을 확인하기 위한 쿼리문  -->
	<select id="selectOverlapBookmark" parameterType="studygroupbookmark" resultType="studygroupbookmark">
		select 
			count(bookmark_no)
		from 
			t_with_member_bookmark
		where 
			group_no = #{groupNo}
		  and
		  member_no = #{memberNo}
	</select>
	
	<!-- 스터디그룹 즐겨찾기 등록을 위한 쿼리문 -->
	<insert id="insertBookmark" parameterType="studygroupbookmark">
		insert into t_with_member_bookmark (
			member_no,
			group_no
		)
		values(
			#{memberNo},
			#{groupNo}
		)
	</insert>
	
	<select id="selectMarker" resultMap="studyGroup">
         select 
         group_no, group_name, group_detail, group_activelongitude, group_activelatitude,
         group_activeplace, group_email, group_tel, group_repimagepath, group_regdate
      from t_with_studygroup
   </select>
</mapper>